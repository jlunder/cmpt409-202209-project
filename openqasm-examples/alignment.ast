Node
  { tag = Program {openqasmMajorVersion = 3, openqasmMinorVersion = Nothing, versionTok = EofToken},
    children =
      [ Node {tag = Statement, children = [Node {tag = IncludeStmt {includePath = "stdgates.inc", includeTok = StringLiteralToken "\"stdgates.inc\""}, children = [], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = StretchTypeSpec, children = [], context = ()}, Node {tag = Identifier {identifierName = "g", identifierTok = IdentifierToken "g"}, children = [], context = ()}, NilNode], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = QuantumDeclStmt, children = [Node {tag = QubitTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 3, integerTok = DecimalIntegerLiteralToken "3"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = BarrierStmt, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cx", identifierTok = IdentifierToken "cx"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = DelayStmt, children = [Node {tag = Identifier {identifierName = "g", identifierTok = IdentifierToken "g"}, children = [], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "U", identifierTok = IdentifierToken "U"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = BinaryOperatorExpr {binaryOp = SlashToken}, children = [Node {tag = Identifier {identifierName = "pi", identifierTok = IdentifierToken "pi"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 4, integerTok = DecimalIntegerLiteralToken "4"}, children = [], context = ()}], context = ()}, Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}, Node {tag = BinaryOperatorExpr {binaryOp = SlashToken}, children = [Node {tag = Identifier {identifierName = "pi", identifierTok = IdentifierToken "pi"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = DelayStmt, children = [Node {tag = BinaryOperatorExpr {binaryOp = AsteriskToken}, children = [Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}, Node {tag = Identifier {identifierName = "g", identifierTok = IdentifierToken "g"}, children = [], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = BarrierStmt, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}], context = ()}], context = ()}
      ],
    context = ()
  }
