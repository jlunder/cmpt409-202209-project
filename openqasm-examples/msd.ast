Node
  { tag = Program {openqasmMajorVersion = 3, openqasmMinorVersion = Nothing, versionTok = EofToken},
    children =
      [ Node {tag = Statement, children = [Node {tag = IncludeStmt {includePath = "stdgates.inc", includeTok = StringLiteralToken "\"stdgates.inc\""}, children = [], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = ConstDeclStmt, children = [Node {tag = IntTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 32, integerTok = DecimalIntegerLiteralToken "32"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "buffer_size", identifierTok = IdentifierToken "buffer_size"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 6, integerTok = DecimalIntegerLiteralToken "6"}, children = [], context = ()}], context = ()}], context = ()},
        Node
          { tag = Statement,
            children =
              [ Node
                  { tag = DefStmt,
                    children =
                      [ Node {tag = Identifier {identifierName = "ymeasure", identifierTok = IdentifierToken "ymeasure"}, children = [], context = ()},
                        Node {tag = List, children = [Node {tag = ArgumentDefinition, children = [Node {tag = QubitTypeSpec, children = [NilNode], context = ()}, Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}], context = ()}], context = ()},
                        Node {tag = BitTypeSpec, children = [NilNode], context = ()},
                        Node
                          { tag = Scope,
                            children =
                              [ Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "s", identifierTok = IdentifierToken "s"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "h", identifierTok = IdentifierToken "h"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = ReturnStmt, children = [Node {tag = MeasureExpr, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}
                              ],
                            context = ()
                          }
                      ],
                    context = ()
                  }
              ],
            context = ()
          },
        Node
          { tag = Statement,
            children =
              [ Node
                  { tag = DefStmt,
                    children =
                      [ Node {tag = Identifier {identifierName = "distill", identifierTok = IdentifierToken "distill"}, children = [], context = ()},
                        Node {tag = List, children = [Node {tag = ArgumentDefinition, children = [Node {tag = QubitTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 10, integerTok = DecimalIntegerLiteralToken "10"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}], context = ()}, Node {tag = ArgumentDefinition, children = [Node {tag = QubitTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 3, integerTok = DecimalIntegerLiteralToken "3"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}], context = ()}], context = ()},
                        Node {tag = BoolTypeSpec, children = [], context = ()},
                        Node
                          { tag = Scope,
                            children =
                              [ Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = BitTypeSpec, children = [NilNode], context = ()}, Node {tag = Identifier {identifierName = "temp", identifierTok = IdentifierToken "temp"}, children = [], context = ()}, NilNode], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = BitTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 3, integerTok = DecimalIntegerLiteralToken "3"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "checks", identifierTok = IdentifierToken "checks"}, children = [], context = ()}, NilNode], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = ResetStmt, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = RangeInitExpr, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}, NilNode, Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "h", identifierTok = IdentifierToken "h"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cx", identifierTok = IdentifierToken "cx"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cx", identifierTok = IdentifierToken "cx"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cx", identifierTok = IdentifierToken "cx"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cx", identifierTok = IdentifierToken "cx"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cy", identifierTok = IdentifierToken "cy"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "h", identifierTok = IdentifierToken "h"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = EqualsToken}, children = [Node {tag = Identifier {identifierName = "temp", identifierTok = IdentifierToken "temp"}, children = [], context = ()}, Node {tag = CallExpr, children = [Node {tag = Identifier {identifierName = "ymeasure", identifierTok = IdentifierToken "ymeasure"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node
                                  { tag = Statement,
                                    children =
                                      [ Node
                                          { tag = IfStmt,
                                            children =
                                              [ Node {tag = BinaryOperatorExpr {binaryOp = DoubleEqualsToken}, children = [Node {tag = Identifier {identifierName = "temp", identifierTok = IdentifierToken "temp"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()},
                                                Node
                                                  { tag = Scope,
                                                    children =
                                                      [ Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "ry", identifierTok = IdentifierToken "ry"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = BinaryOperatorExpr {binaryOp = SlashToken}, children = [Node {tag = ParenExpr, children = [Node {tag = UnaryOperatorExpr {unaryOp = MinusToken}, children = [Node {tag = Identifier {identifierName = "pi", identifierTok = IdentifierToken "pi"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}
                                                      ],
                                                    context = ()
                                                  },
                                                NilNode
                                              ],
                                            context = ()
                                          }
                                      ],
                                    context = ()
                                  },
                                Node {tag = Statement, children = [Node {tag = ResetStmt, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "h", identifierTok = IdentifierToken "h"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cz", identifierTok = IdentifierToken "cz"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cy", identifierTok = IdentifierToken "cy"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 3, integerTok = DecimalIntegerLiteralToken "3"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = EqualsToken}, children = [Node {tag = Identifier {identifierName = "temp", identifierTok = IdentifierToken "temp"}, children = [], context = ()}, Node {tag = CallExpr, children = [Node {tag = Identifier {identifierName = "ymeasure", identifierTok = IdentifierToken "ymeasure"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 3, integerTok = DecimalIntegerLiteralToken "3"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node
                                  { tag = Statement,
                                    children =
                                      [ Node
                                          { tag = IfStmt,
                                            children =
                                              [ Node {tag = BinaryOperatorExpr {binaryOp = DoubleEqualsToken}, children = [Node {tag = Identifier {identifierName = "temp", identifierTok = IdentifierToken "temp"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()},
                                                Node
                                                  { tag = Scope,
                                                    children =
                                                      [ Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "ry", identifierTok = IdentifierToken "ry"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = BinaryOperatorExpr {binaryOp = SlashToken}, children = [Node {tag = Identifier {identifierName = "pi", identifierTok = IdentifierToken "pi"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}
                                                      ],
                                                    context = ()
                                                  },
                                                NilNode
                                              ],
                                            context = ()
                                          }
                                      ],
                                    context = ()
                                  },
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "h", identifierTok = IdentifierToken "h"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "s", identifierTok = IdentifierToken "s"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cy", identifierTok = IdentifierToken "cy"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 4, integerTok = DecimalIntegerLiteralToken "4"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = EqualsToken}, children = [Node {tag = Identifier {identifierName = "temp", identifierTok = IdentifierToken "temp"}, children = [], context = ()}, Node {tag = CallExpr, children = [Node {tag = Identifier {identifierName = "ymeasure", identifierTok = IdentifierToken "ymeasure"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 4, integerTok = DecimalIntegerLiteralToken "4"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node
                                  { tag = Statement,
                                    children =
                                      [ Node
                                          { tag = IfStmt,
                                            children =
                                              [ Node {tag = BinaryOperatorExpr {binaryOp = DoubleEqualsToken}, children = [Node {tag = Identifier {identifierName = "temp", identifierTok = IdentifierToken "temp"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()},
                                                Node
                                                  { tag = Scope,
                                                    children =
                                                      [ Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "ry", identifierTok = IdentifierToken "ry"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = BinaryOperatorExpr {binaryOp = SlashToken}, children = [Node {tag = ParenExpr, children = [Node {tag = UnaryOperatorExpr {unaryOp = MinusToken}, children = [Node {tag = Identifier {identifierName = "pi", identifierTok = IdentifierToken "pi"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}
                                                      ],
                                                    context = ()
                                                  },
                                                NilNode
                                              ],
                                            context = ()
                                          }
                                      ],
                                    context = ()
                                  },
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cz", identifierTok = IdentifierToken "cz"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 3, integerTok = DecimalIntegerLiteralToken "3"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cy", identifierTok = IdentifierToken "cy"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 5, integerTok = DecimalIntegerLiteralToken "5"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = EqualsToken}, children = [Node {tag = Identifier {identifierName = "temp", identifierTok = IdentifierToken "temp"}, children = [], context = ()}, Node {tag = CallExpr, children = [Node {tag = Identifier {identifierName = "ymeasure", identifierTok = IdentifierToken "ymeasure"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 5, integerTok = DecimalIntegerLiteralToken "5"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node
                                  { tag = Statement,
                                    children =
                                      [ Node
                                          { tag = IfStmt,
                                            children =
                                              [ Node {tag = BinaryOperatorExpr {binaryOp = DoubleEqualsToken}, children = [Node {tag = Identifier {identifierName = "temp", identifierTok = IdentifierToken "temp"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()},
                                                Node
                                                  { tag = Scope,
                                                    children =
                                                      [ Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "ry", identifierTok = IdentifierToken "ry"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = BinaryOperatorExpr {binaryOp = SlashToken}, children = [Node {tag = Identifier {identifierName = "pi", identifierTok = IdentifierToken "pi"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}
                                                      ],
                                                    context = ()
                                                  },
                                                NilNode
                                              ],
                                            context = ()
                                          }
                                      ],
                                    context = ()
                                  },
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cy", identifierTok = IdentifierToken "cy"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [Node {tag = List, children = [Node {tag = InvGateModifier, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "s", identifierTok = IdentifierToken "s"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cz", identifierTok = IdentifierToken "cz"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "h", identifierTok = IdentifierToken "h"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cy", identifierTok = IdentifierToken "cy"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cy", identifierTok = IdentifierToken "cy"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 6, integerTok = DecimalIntegerLiteralToken "6"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = EqualsToken}, children = [Node {tag = Identifier {identifierName = "temp", identifierTok = IdentifierToken "temp"}, children = [], context = ()}, Node {tag = CallExpr, children = [Node {tag = Identifier {identifierName = "ymeasure", identifierTok = IdentifierToken "ymeasure"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 6, integerTok = DecimalIntegerLiteralToken "6"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node
                                  { tag = Statement,
                                    children =
                                      [ Node
                                          { tag = IfStmt,
                                            children =
                                              [ Node {tag = BinaryOperatorExpr {binaryOp = DoubleEqualsToken}, children = [Node {tag = Identifier {identifierName = "temp", identifierTok = IdentifierToken "temp"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()},
                                                Node
                                                  { tag = Scope,
                                                    children =
                                                      [ Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "ry", identifierTok = IdentifierToken "ry"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = BinaryOperatorExpr {binaryOp = SlashToken}, children = [Node {tag = ParenExpr, children = [Node {tag = UnaryOperatorExpr {unaryOp = MinusToken}, children = [Node {tag = Identifier {identifierName = "pi", identifierTok = IdentifierToken "pi"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}
                                                      ],
                                                    context = ()
                                                  },
                                                NilNode
                                              ],
                                            context = ()
                                          }
                                      ],
                                    context = ()
                                  },
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cz", identifierTok = IdentifierToken "cz"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cz", identifierTok = IdentifierToken "cz"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cy", identifierTok = IdentifierToken "cy"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 7, integerTok = DecimalIntegerLiteralToken "7"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = EqualsToken}, children = [Node {tag = Identifier {identifierName = "temp", identifierTok = IdentifierToken "temp"}, children = [], context = ()}, Node {tag = CallExpr, children = [Node {tag = Identifier {identifierName = "ymeasure", identifierTok = IdentifierToken "ymeasure"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 7, integerTok = DecimalIntegerLiteralToken "7"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = IfStmt, children = [Node {tag = BinaryOperatorExpr {binaryOp = DoubleEqualsToken}, children = [Node {tag = Identifier {identifierName = "temp", identifierTok = IdentifierToken "temp"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}, Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "ry", identifierTok = IdentifierToken "ry"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = BinaryOperatorExpr {binaryOp = SlashToken}, children = [Node {tag = Identifier {identifierName = "pi", identifierTok = IdentifierToken "pi"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}, NilNode], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cy", identifierTok = IdentifierToken "cy"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 8, integerTok = DecimalIntegerLiteralToken "8"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = EqualsToken}, children = [Node {tag = Identifier {identifierName = "temp", identifierTok = IdentifierToken "temp"}, children = [], context = ()}, Node {tag = CallExpr, children = [Node {tag = Identifier {identifierName = "ymeasure", identifierTok = IdentifierToken "ymeasure"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 8, integerTok = DecimalIntegerLiteralToken "8"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node
                                  { tag = Statement,
                                    children =
                                      [ Node
                                          { tag = IfStmt,
                                            children =
                                              [ Node {tag = BinaryOperatorExpr {binaryOp = DoubleEqualsToken}, children = [Node {tag = Identifier {identifierName = "temp", identifierTok = IdentifierToken "temp"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()},
                                                Node
                                                  { tag = Scope,
                                                    children =
                                                      [ Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "ry", identifierTok = IdentifierToken "ry"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = BinaryOperatorExpr {binaryOp = SlashToken}, children = [Node {tag = ParenExpr, children = [Node {tag = UnaryOperatorExpr {unaryOp = MinusToken}, children = [Node {tag = Identifier {identifierName = "pi", identifierTok = IdentifierToken "pi"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}
                                                      ],
                                                    context = ()
                                                  },
                                                NilNode
                                              ],
                                            context = ()
                                          }
                                      ],
                                    context = ()
                                  },
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cz", identifierTok = IdentifierToken "cz"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cy", identifierTok = IdentifierToken "cy"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 9, integerTok = DecimalIntegerLiteralToken "9"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = EqualsToken}, children = [Node {tag = Identifier {identifierName = "temp", identifierTok = IdentifierToken "temp"}, children = [], context = ()}, Node {tag = CallExpr, children = [Node {tag = Identifier {identifierName = "ymeasure", identifierTok = IdentifierToken "ymeasure"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 9, integerTok = DecimalIntegerLiteralToken "9"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node
                                  { tag = Statement,
                                    children =
                                      [ Node
                                          { tag = IfStmt,
                                            children =
                                              [ Node {tag = BinaryOperatorExpr {binaryOp = DoubleEqualsToken}, children = [Node {tag = Identifier {identifierName = "temp", identifierTok = IdentifierToken "temp"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()},
                                                Node
                                                  { tag = Scope,
                                                    children =
                                                      [ Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "ry", identifierTok = IdentifierToken "ry"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = BinaryOperatorExpr {binaryOp = SlashToken}, children = [Node {tag = Identifier {identifierName = "pi", identifierTok = IdentifierToken "pi"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}
                                                      ],
                                                    context = ()
                                                  },
                                                NilNode
                                              ],
                                            context = ()
                                          }
                                      ],
                                    context = ()
                                  },
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "h", identifierTok = IdentifierToken "h"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cx", identifierTok = IdentifierToken "cx"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cx", identifierTok = IdentifierToken "cx"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cx", identifierTok = IdentifierToken "cx"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cx", identifierTok = IdentifierToken "cx"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "h", identifierTok = IdentifierToken "h"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = EqualsToken}, children = [Node {tag = Identifier {identifierName = "checks", identifierTok = IdentifierToken "checks"}, children = [], context = ()}, Node {tag = MeasureExpr, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = EqualsToken}, children = [Node {tag = Identifier {identifierName = "success", identifierTok = IdentifierToken "success"}, children = [], context = ()}, Node {tag = UnaryOperatorExpr {unaryOp = TildeToken}, children = [Node {tag = ParenExpr, children = [Node {tag = BinaryOperatorExpr {binaryOp = PipeToken}, children = [Node {tag = ParenExpr, children = [Node {tag = BinaryOperatorExpr {binaryOp = PipeToken}, children = [Node {tag = CastExpr, children = [Node {tag = BoolTypeSpec, children = [], context = ()}, Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "checks", identifierTok = IdentifierToken "checks"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}, Node {tag = CastExpr, children = [Node {tag = BoolTypeSpec, children = [], context = ()}, Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "checks", identifierTok = IdentifierToken "checks"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}, Node {tag = CastExpr, children = [Node {tag = BoolTypeSpec, children = [], context = ()}, Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "checks", identifierTok = IdentifierToken "checks"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = ReturnStmt, children = [Node {tag = Identifier {identifierName = "success", identifierTok = IdentifierToken "success"}, children = [], context = ()}], context = ()}], context = ()}
                              ],
                            context = ()
                          }
                      ],
                    context = ()
                  }
              ],
            context = ()
          },
        Node
          { tag = Statement,
            children =
              [ Node
                  { tag = DefStmt,
                    children =
                      [ Node {tag = Identifier {identifierName = "rus_level_0", identifierTok = IdentifierToken "rus_level_0"}, children = [], context = ()},
                        Node {tag = List, children = [Node {tag = ArgumentDefinition, children = [Node {tag = QubitTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 10, integerTok = DecimalIntegerLiteralToken "10"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}], context = ()}, Node {tag = ArgumentDefinition, children = [Node {tag = QubitTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 3, integerTok = DecimalIntegerLiteralToken "3"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}], context = ()}], context = ()},
                        NilNode,
                        Node
                          { tag = Scope,
                            children =
                              [ Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = BoolTypeSpec, children = [], context = ()}, Node {tag = Identifier {identifierName = "success", identifierTok = IdentifierToken "success"}, children = [], context = ()}, NilNode], context = ()}], context = ()},
                                Node
                                  { tag = Statement,
                                    children =
                                      [ Node
                                          { tag = WhileStmt,
                                            children =
                                              [ Node {tag = UnaryOperatorExpr {unaryOp = TildeToken}, children = [Node {tag = Identifier {identifierName = "success", identifierTok = IdentifierToken "success"}, children = [], context = ()}], context = ()},
                                                Node
                                                  { tag = Scope,
                                                    children =
                                                      [ Node {tag = Statement, children = [Node {tag = ResetStmt, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}], context = ()}], context = ()},
                                                        Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "ry", identifierTok = IdentifierToken "ry"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = BinaryOperatorExpr {binaryOp = SlashToken}, children = [Node {tag = Identifier {identifierName = "pi", identifierTok = IdentifierToken "pi"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 4, integerTok = DecimalIntegerLiteralToken "4"}, children = [], context = ()}], context = ()}], context = ()}, NilNode, Node {tag = List, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}], context = ()}], context = ()}], context = ()},
                                                        Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = EqualsToken}, children = [Node {tag = Identifier {identifierName = "success", identifierTok = IdentifierToken "success"}, children = [], context = ()}, Node {tag = CallExpr, children = [Node {tag = Identifier {identifierName = "distill", identifierTok = IdentifierToken "distill"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = Identifier {identifierName = "magic", identifierTok = IdentifierToken "magic"}, children = [], context = ()}, Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}
                                                      ],
                                                    context = ()
                                                  }
                                              ],
                                            context = ()
                                          }
                                      ],
                                    context = ()
                                  }
                              ],
                            context = ()
                          }
                      ],
                    context = ()
                  }
              ],
            context = ()
          },
        Node
          { tag = Statement,
            children =
              [ Node
                  { tag = DefStmt,
                    children =
                      [ Node {tag = Identifier {identifierName = "distill_and_buffer", identifierTok = IdentifierToken "distill_and_buffer"}, children = [], context = ()},
                        Node {tag = List, children = [Node {tag = ArgumentDefinition, children = [Node {tag = IntTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 32, integerTok = DecimalIntegerLiteralToken "32"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "num", identifierTok = IdentifierToken "num"}, children = [], context = ()}], context = ()}, Node {tag = ArgumentDefinition, children = [Node {tag = QubitTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 33, integerTok = DecimalIntegerLiteralToken "33"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "work", identifierTok = IdentifierToken "work"}, children = [], context = ()}], context = ()}, Node {tag = ArgumentDefinition, children = [Node {tag = QubitTypeSpec, children = [Node {tag = Identifier {identifierName = "buffer_size", identifierTok = IdentifierToken "buffer_size"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "buffer", identifierTok = IdentifierToken "buffer"}, children = [], context = ()}], context = ()}], context = ()},
                        NilNode,
                        Node
                          { tag = Scope,
                            children =
                              [ Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = IntTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 32, integerTok = DecimalIntegerLiteralToken "32"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "index", identifierTok = IdentifierToken "index"}, children = [], context = ()}, NilNode], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = BitTypeSpec, children = [NilNode], context = ()}, Node {tag = Identifier {identifierName = "success_0", identifierTok = IdentifierToken "success_0"}, children = [], context = ()}, NilNode], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = BitTypeSpec, children = [NilNode], context = ()}, Node {tag = Identifier {identifierName = "success_1", identifierTok = IdentifierToken "success_1"}, children = [], context = ()}, NilNode], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = AliasDeclStmt, children = [Node {tag = Identifier {identifierName = "magic_lvl0", identifierTok = IdentifierToken "magic_lvl0"}, children = [], context = ()}, Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "work", identifierTok = IdentifierToken "work"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = RangeInitExpr, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}, NilNode, Node {tag = IntegerLiteral {integerVal = 9, integerTok = DecimalIntegerLiteralToken "9"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = AliasDeclStmt, children = [Node {tag = Identifier {identifierName = "magic_lvl1_0", identifierTok = IdentifierToken "magic_lvl1_0"}, children = [], context = ()}, Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "work", identifierTok = IdentifierToken "work"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = RangeInitExpr, children = [Node {tag = IntegerLiteral {integerVal = 10, integerTok = DecimalIntegerLiteralToken "10"}, children = [], context = ()}, NilNode, Node {tag = IntegerLiteral {integerVal = 19, integerTok = DecimalIntegerLiteralToken "19"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = AliasDeclStmt, children = [Node {tag = Identifier {identifierName = "magic_lvl1_1", identifierTok = IdentifierToken "magic_lvl1_1"}, children = [], context = ()}, Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "work", identifierTok = IdentifierToken "work"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = RangeInitExpr, children = [Node {tag = IntegerLiteral {integerVal = 20, integerTok = DecimalIntegerLiteralToken "20"}, children = [], context = ()}, NilNode, Node {tag = IntegerLiteral {integerVal = 29, integerTok = DecimalIntegerLiteralToken "29"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = AliasDeclStmt, children = [Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}, Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "work", identifierTok = IdentifierToken "work"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = RangeInitExpr, children = [Node {tag = IntegerLiteral {integerVal = 30, integerTok = DecimalIntegerLiteralToken "30"}, children = [], context = ()}, NilNode, Node {tag = IntegerLiteral {integerVal = 32, integerTok = DecimalIntegerLiteralToken "32"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node
                                  { tag = Statement,
                                    children =
                                      [ Node
                                          { tag = ForStmt,
                                            children =
                                              [ Node {tag = UintTypeSpec, children = [NilNode], context = ()},
                                                Node {tag = Identifier {identifierName = "i", identifierTok = IdentifierToken "i"}, children = [], context = ()},
                                                Node {tag = RangeInitExpr, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}, NilNode, Node {tag = IntegerLiteral {integerVal = 9, integerTok = DecimalIntegerLiteralToken "9"}, children = [], context = ()}], context = ()},
                                                Node
                                                  { tag = Scope,
                                                    children =
                                                      [ Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "rus_level_0", identifierTok = IdentifierToken "rus_level_0"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = Identifier {identifierName = "magic_lvl0", identifierTok = IdentifierToken "magic_lvl0"}, children = [], context = ()}, Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}], context = ()}], context = ()}], context = ()},
                                                        Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "swap", identifierTok = IdentifierToken "swap"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "magic_lvl0", identifierTok = IdentifierToken "magic_lvl0"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "magic_lvl1_0", identifierTok = IdentifierToken "magic_lvl1_0"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = Identifier {identifierName = "i", identifierTok = IdentifierToken "i"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                                        Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "swap", identifierTok = IdentifierToken "swap"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "magic_lvl0", identifierTok = IdentifierToken "magic_lvl0"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "magic_lvl1_1", identifierTok = IdentifierToken "magic_lvl1_1"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = Identifier {identifierName = "i", identifierTok = IdentifierToken "i"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}
                                                      ],
                                                    context = ()
                                                  }
                                              ],
                                            context = ()
                                          }
                                      ],
                                    context = ()
                                  },
                                Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = EqualsToken}, children = [Node {tag = Identifier {identifierName = "success_0", identifierTok = IdentifierToken "success_0"}, children = [], context = ()}, Node {tag = CallExpr, children = [Node {tag = Identifier {identifierName = "distill", identifierTok = IdentifierToken "distill"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = Identifier {identifierName = "magic_lvl1_0", identifierTok = IdentifierToken "magic_lvl1_0"}, children = [], context = ()}, Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = EqualsToken}, children = [Node {tag = Identifier {identifierName = "success_1", identifierTok = IdentifierToken "success_1"}, children = [], context = ()}, Node {tag = CallExpr, children = [Node {tag = Identifier {identifierName = "distill", identifierTok = IdentifierToken "distill"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = Identifier {identifierName = "magic_lvl1_1", identifierTok = IdentifierToken "magic_lvl1_1"}, children = [], context = ()}, Node {tag = Identifier {identifierName = "scratch", identifierTok = IdentifierToken "scratch"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node
                                  { tag = Statement,
                                    children =
                                      [ Node
                                          { tag = IfStmt,
                                            children =
                                              [ Node {tag = BinaryOperatorExpr {binaryOp = DoubleAmpersandToken}, children = [Node {tag = Identifier {identifierName = "success_0", identifierTok = IdentifierToken "success_0"}, children = [], context = ()}, Node {tag = ParenExpr, children = [Node {tag = BinaryOperatorExpr {binaryOp = LessToken}, children = [Node {tag = Identifier {identifierName = "index", identifierTok = IdentifierToken "index"}, children = [], context = ()}, Node {tag = Identifier {identifierName = "buffer_size", identifierTok = IdentifierToken "buffer_size"}, children = [], context = ()}], context = ()}], context = ()}], context = ()},
                                                Node
                                                  { tag = Scope,
                                                    children =
                                                      [ Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "swap", identifierTok = IdentifierToken "swap"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "magic_lvl1_0", identifierTok = IdentifierToken "magic_lvl1_0"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = RangeInitExpr, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}, NilNode, Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "buffer", identifierTok = IdentifierToken "buffer"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = RangeInitExpr, children = [Node {tag = Identifier {identifierName = "index", identifierTok = IdentifierToken "index"}, children = [], context = ()}, NilNode, Node {tag = BinaryOperatorExpr {binaryOp = PlusToken}, children = [Node {tag = Identifier {identifierName = "index", identifierTok = IdentifierToken "index"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                                        Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = PlusEqualsToken}, children = [Node {tag = Identifier {identifierName = "index", identifierTok = IdentifierToken "index"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}
                                                      ],
                                                    context = ()
                                                  },
                                                NilNode
                                              ],
                                            context = ()
                                          }
                                      ],
                                    context = ()
                                  },
                                Node
                                  { tag = Statement,
                                    children =
                                      [ Node
                                          { tag = IfStmt,
                                            children =
                                              [ Node {tag = BinaryOperatorExpr {binaryOp = DoubleAmpersandToken}, children = [Node {tag = Identifier {identifierName = "success_1", identifierTok = IdentifierToken "success_1"}, children = [], context = ()}, Node {tag = ParenExpr, children = [Node {tag = BinaryOperatorExpr {binaryOp = LessToken}, children = [Node {tag = Identifier {identifierName = "index", identifierTok = IdentifierToken "index"}, children = [], context = ()}, Node {tag = Identifier {identifierName = "buffer_size", identifierTok = IdentifierToken "buffer_size"}, children = [], context = ()}], context = ()}], context = ()}], context = ()},
                                                Node
                                                  { tag = Scope,
                                                    children =
                                                      [ Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "swap", identifierTok = IdentifierToken "swap"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "magic_lvl1_1", identifierTok = IdentifierToken "magic_lvl1_1"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = RangeInitExpr, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}, NilNode, Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "buffer", identifierTok = IdentifierToken "buffer"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = RangeInitExpr, children = [Node {tag = Identifier {identifierName = "index", identifierTok = IdentifierToken "index"}, children = [], context = ()}, NilNode, Node {tag = BinaryOperatorExpr {binaryOp = PlusToken}, children = [Node {tag = Identifier {identifierName = "index", identifierTok = IdentifierToken "index"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                                        Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = PlusEqualsToken}, children = [Node {tag = Identifier {identifierName = "index", identifierTok = IdentifierToken "index"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}
                                                      ],
                                                    context = ()
                                                  },
                                                NilNode
                                              ],
                                            context = ()
                                          }
                                      ],
                                    context = ()
                                  }
                              ],
                            context = ()
                          }
                      ],
                    context = ()
                  }
              ],
            context = ()
          },
        Node
          { tag = Statement,
            children =
              [ Node
                  { tag = DefStmt,
                    children =
                      [ Node {tag = Identifier {identifierName = "Ty", identifierTok = IdentifierToken "Ty"}, children = [], context = ()},
                        Node {tag = List, children = [Node {tag = ArgumentDefinition, children = [Node {tag = IntTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 32, integerTok = DecimalIntegerLiteralToken "32"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "addr", identifierTok = IdentifierToken "addr"}, children = [], context = ()}], context = ()}, Node {tag = ArgumentDefinition, children = [Node {tag = QubitTypeSpec, children = [NilNode], context = ()}, Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}], context = ()}, Node {tag = ArgumentDefinition, children = [Node {tag = QubitTypeSpec, children = [Node {tag = Identifier {identifierName = "buffer_size", identifierTok = IdentifierToken "buffer_size"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "buffer", identifierTok = IdentifierToken "buffer"}, children = [], context = ()}], context = ()}], context = ()},
                        NilNode,
                        Node
                          { tag = Scope,
                            children =
                              [ Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = BitTypeSpec, children = [NilNode], context = ()}, Node {tag = Identifier {identifierName = "outcome", identifierTok = IdentifierToken "outcome"}, children = [], context = ()}, NilNode], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cy", identifierTok = IdentifierToken "cy"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "buffer", identifierTok = IdentifierToken "buffer"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = Identifier {identifierName = "addr", identifierTok = IdentifierToken "addr"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = EqualsToken}, children = [Node {tag = Identifier {identifierName = "outcome", identifierTok = IdentifierToken "outcome"}, children = [], context = ()}, Node {tag = CallExpr, children = [Node {tag = Identifier {identifierName = "ymeasure", identifierTok = IdentifierToken "ymeasure"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "buffer", identifierTok = IdentifierToken "buffer"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = Identifier {identifierName = "addr", identifierTok = IdentifierToken "addr"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = IfStmt, children = [Node {tag = BinaryOperatorExpr {binaryOp = DoubleEqualsToken}, children = [Node {tag = Identifier {identifierName = "outcome", identifierTok = IdentifierToken "outcome"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}, Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "ry", identifierTok = IdentifierToken "ry"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = BinaryOperatorExpr {binaryOp = SlashToken}, children = [Node {tag = Identifier {identifierName = "pi", identifierTok = IdentifierToken "pi"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}, NilNode, Node {tag = List, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}, NilNode], context = ()}], context = ()}
                              ],
                            context = ()
                          }
                      ],
                    context = ()
                  }
              ],
            context = ()
          },
        Node {tag = Statement, children = [Node {tag = QuantumDeclStmt, children = [Node {tag = QubitTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 33, integerTok = DecimalIntegerLiteralToken "33"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "workspace", identifierTok = IdentifierToken "workspace"}, children = [], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = QuantumDeclStmt, children = [Node {tag = QubitTypeSpec, children = [Node {tag = Identifier {identifierName = "buffer_size", identifierTok = IdentifierToken "buffer_size"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "buffer", identifierTok = IdentifierToken "buffer"}, children = [], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = QuantumDeclStmt, children = [Node {tag = QubitTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 5, integerTok = DecimalIntegerLiteralToken "5"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = BitTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 5, integerTok = DecimalIntegerLiteralToken "5"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "c", identifierTok = IdentifierToken "c"}, children = [], context = ()}, NilNode], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = IntTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 32, integerTok = DecimalIntegerLiteralToken "32"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "address", identifierTok = IdentifierToken "address"}, children = [], context = ()}, NilNode], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = ResetStmt, children = [Node {tag = Identifier {identifierName = "workspace", identifierTok = IdentifierToken "workspace"}, children = [], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = ResetStmt, children = [Node {tag = Identifier {identifierName = "buffer", identifierTok = IdentifierToken "buffer"}, children = [], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = ResetStmt, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "distill_and_buffer", identifierTok = IdentifierToken "distill_and_buffer"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = Identifier {identifierName = "buffer_size", identifierTok = IdentifierToken "buffer_size"}, children = [], context = ()}], context = ()}, NilNode, Node {tag = List, children = [Node {tag = Identifier {identifierName = "workspace", identifierTok = IdentifierToken "workspace"}, children = [], context = ()}, Node {tag = Identifier {identifierName = "buffer", identifierTok = IdentifierToken "buffer"}, children = [], context = ()}], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "h", identifierTok = IdentifierToken "h"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cx", identifierTok = IdentifierToken "cx"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "Ty", identifierTok = IdentifierToken "Ty"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = Identifier {identifierName = "address", identifierTok = IdentifierToken "address"}, children = [], context = ()}], context = ()}, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "buffer", identifierTok = IdentifierToken "buffer"}, children = [], context = ()}], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = PlusEqualsToken}, children = [Node {tag = Identifier {identifierName = "address", identifierTok = IdentifierToken "address"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "cx", identifierTok = IdentifierToken "cx"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "Ty", identifierTok = IdentifierToken "Ty"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = Identifier {identifierName = "address", identifierTok = IdentifierToken "address"}, children = [], context = ()}], context = ()}, NilNode, Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "buffer", identifierTok = IdentifierToken "buffer"}, children = [], context = ()}], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = PlusEqualsToken}, children = [Node {tag = Identifier {identifierName = "address", identifierTok = IdentifierToken "address"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}
      ],
    context = ()
  }
