Node
  { tag = Program {openqasmMajorVersion = 3, openqasmMinorVersion = Just 0, versionTok = VersionSpecifierToken "3.0"},
    children =
      [ Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = ArrayTypeSpec, children = [Node {tag = IntTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 8, integerTok = DecimalIntegerLiteralToken "8"}, children = [], context = ()}], context = ()}, Node {tag = IntegerLiteral {integerVal = 16, integerTok = DecimalIntegerLiteralToken "16"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "my_ints", identifierTok = IdentifierToken "my_ints"}, children = [], context = ()}, NilNode], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = ArrayTypeSpec, children = [Node {tag = FloatTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 64, integerTok = DecimalIntegerLiteralToken "64"}, children = [], context = ()}], context = ()}, Node {tag = IntegerLiteral {integerVal = 8, integerTok = DecimalIntegerLiteralToken "8"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 4, integerTok = DecimalIntegerLiteralToken "4"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "my_doubles", identifierTok = IdentifierToken "my_doubles"}, children = [], context = ()}, NilNode], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = ArrayTypeSpec, children = [Node {tag = UintTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 32, integerTok = DecimalIntegerLiteralToken "32"}, children = [], context = ()}], context = ()}, Node {tag = IntegerLiteral {integerVal = 4, integerTok = DecimalIntegerLiteralToken "4"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "my_defined_uints", identifierTok = IdentifierToken "my_defined_uints"}, children = [], context = ()}, Node {tag = ArrayInitExpr, children = [Node {tag = IntegerLiteral {integerVal = 5, integerTok = DecimalIntegerLiteralToken "5"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 6, integerTok = DecimalIntegerLiteralToken "6"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 7, integerTok = DecimalIntegerLiteralToken "7"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 8, integerTok = DecimalIntegerLiteralToken "8"}, children = [], context = ()}], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = ArrayTypeSpec, children = [Node {tag = FloatTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 32, integerTok = DecimalIntegerLiteralToken "32"}, children = [], context = ()}], context = ()}, Node {tag = IntegerLiteral {integerVal = 4, integerTok = DecimalIntegerLiteralToken "4"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "my_defined_floats", identifierTok = IdentifierToken "my_defined_floats"}, children = [], context = ()}, Node {tag = ArrayInitExpr, children = [Node {tag = ArrayInitExpr, children = [Node {tag = FloatLiteral {floatVal = 0.5, floatTok = FloatLiteralToken "0.5"}, children = [], context = ()}, Node {tag = FloatLiteral {floatVal = 0.5, floatTok = FloatLiteralToken "0.5"}, children = [], context = ()}], context = ()}, Node {tag = ArrayInitExpr, children = [Node {tag = FloatLiteral {floatVal = 1.0, floatTok = FloatLiteralToken "1.0"}, children = [], context = ()}, Node {tag = FloatLiteral {floatVal = 2.0, floatTok = FloatLiteralToken "2.0"}, children = [], context = ()}], context = ()}, Node {tag = ArrayInitExpr, children = [Node {tag = UnaryOperatorExpr {unaryOp = MinusToken}, children = [Node {tag = FloatLiteral {floatVal = 0.4, floatTok = FloatLiteralToken "0.4"}, children = [], context = ()}], context = ()}, Node {tag = FloatLiteral {floatVal = 0.7, floatTok = FloatLiteralToken "0.7"}, children = [], context = ()}], context = ()}, Node {tag = ArrayInitExpr, children = [Node {tag = FloatLiteral {floatVal = 1.3, floatTok = FloatLiteralToken "1.3"}, children = [], context = ()}, Node {tag = UnaryOperatorExpr {unaryOp = MinusToken}, children = [Node {tag = FloatLiteral {floatVal = 2.1e-2, floatTok = FloatLiteralToken "2.1e-2"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = ArrayTypeSpec, children = [Node {tag = FloatTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 32, integerTok = DecimalIntegerLiteralToken "32"}, children = [], context = ()}], context = ()}, Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "my_defined_float_row", identifierTok = IdentifierToken "my_defined_float_row"}, children = [], context = ()}, Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "my_defined_floats", identifierTok = IdentifierToken "my_defined_floats"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = ConstDeclStmt, children = [Node {tag = UintTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 8, integerTok = DecimalIntegerLiteralToken "8"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "DIM_SIZE", identifierTok = IdentifierToken "DIM_SIZE"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = ArrayTypeSpec, children = [Node {tag = IntTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 8, integerTok = DecimalIntegerLiteralToken "8"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "DIM_SIZE", identifierTok = IdentifierToken "DIM_SIZE"}, children = [], context = ()}, Node {tag = Identifier {identifierName = "DIM_SIZE", identifierTok = IdentifierToken "DIM_SIZE"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "all_ones", identifierTok = IdentifierToken "all_ones"}, children = [], context = ()}, Node {tag = ArrayInitExpr, children = [Node {tag = ArrayInitExpr, children = [Node {tag = BinaryOperatorExpr {binaryOp = PlusToken}, children = [Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 3, integerTok = DecimalIntegerLiteralToken "3"}, children = [], context = ()}], context = ()}, Node {tag = BinaryOperatorExpr {binaryOp = MinusToken}, children = [Node {tag = IntegerLiteral {integerVal = 4, integerTok = DecimalIntegerLiteralToken "4"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = ArrayInitExpr, children = [Node {tag = BinaryOperatorExpr {binaryOp = PlusToken}, children = [Node {tag = IntegerLiteral {integerVal = 3, integerTok = DecimalIntegerLiteralToken "3"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 8, integerTok = DecimalIntegerLiteralToken "8"}, children = [], context = ()}], context = ()}, Node {tag = BinaryOperatorExpr {binaryOp = MinusToken}, children = [Node {tag = IntegerLiteral {integerVal = 12, integerTok = DecimalIntegerLiteralToken "12"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 4, integerTok = DecimalIntegerLiteralToken "4"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = UintTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 8, integerTok = DecimalIntegerLiteralToken "8"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "a", identifierTok = IdentifierToken "a"}, children = [], context = ()}, Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "my_defined_uints", identifierTok = IdentifierToken "my_defined_uints"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = FloatTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 32, integerTok = DecimalIntegerLiteralToken "32"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "b", identifierTok = IdentifierToken "b"}, children = [], context = ()}, Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "my_defined_floats", identifierTok = IdentifierToken "my_defined_floats"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = EqualsToken}, children = [Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "my_defined_uints", identifierTok = IdentifierToken "my_defined_uints"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IntegerLiteral {integerVal = 5, integerTok = DecimalIntegerLiteralToken "5"}, children = [], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = EqualsToken}, children = [Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "my_defined_floats", identifierTok = IdentifierToken "my_defined_floats"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 3, integerTok = DecimalIntegerLiteralToken "3"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = UnaryOperatorExpr {unaryOp = MinusToken}, children = [Node {tag = FloatLiteral {floatVal = 0.45, floatTok = FloatLiteralToken "0.45"}, children = [], context = ()}], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = EqualsToken}, children = [Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "my_defined_uints", identifierTok = IdentifierToken "my_defined_uints"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = BinaryOperatorExpr {binaryOp = MinusToken}, children = [Node {tag = Identifier {identifierName = "a", identifierTok = IdentifierToken "a"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}, Node {tag = BinaryOperatorExpr {binaryOp = PlusToken}, children = [Node {tag = Identifier {identifierName = "a", identifierTok = IdentifierToken "a"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = EqualsToken}, children = [Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "my_defined_floats", identifierTok = IdentifierToken "my_defined_floats"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "my_defined_float_row", identifierTok = IdentifierToken "my_defined_float_row"}, children = [], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = EqualsToken}, children = [Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "my_defined_floats", identifierTok = IdentifierToken "my_defined_floats"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = RangeInitExpr, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}, NilNode, Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}, Node {tag = IndexExpr, children = [Node {tag = Identifier {identifierName = "my_defined_floats", identifierTok = IdentifierToken "my_defined_floats"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = RangeInitExpr, children = [Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}, NilNode, Node {tag = IntegerLiteral {integerVal = 3, integerTok = DecimalIntegerLiteralToken "3"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = ConstDeclStmt, children = [Node {tag = UintTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 32, integerTok = DecimalIntegerLiteralToken "32"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "dimension", identifierTok = IdentifierToken "dimension"}, children = [], context = ()}, Node {tag = CallExpr, children = [Node {tag = Identifier {identifierName = "sizeof", identifierTok = IdentifierToken "sizeof"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = Identifier {identifierName = "my_defined_uints", identifierTok = IdentifierToken "my_defined_uints"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = ConstDeclStmt, children = [Node {tag = UintTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 32, integerTok = DecimalIntegerLiteralToken "32"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "first_dimension", identifierTok = IdentifierToken "first_dimension"}, children = [], context = ()}, Node {tag = CallExpr, children = [Node {tag = Identifier {identifierName = "sizeof", identifierTok = IdentifierToken "sizeof"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = Identifier {identifierName = "my_doubles", identifierTok = IdentifierToken "my_doubles"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = ConstDeclStmt, children = [Node {tag = UintTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 32, integerTok = DecimalIntegerLiteralToken "32"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "second_dimension", identifierTok = IdentifierToken "second_dimension"}, children = [], context = ()}, Node {tag = CallExpr, children = [Node {tag = Identifier {identifierName = "sizeof", identifierTok = IdentifierToken "sizeof"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = Identifier {identifierName = "my_doubles", identifierTok = IdentifierToken "my_doubles"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = ConstDeclStmt, children = [Node {tag = UintTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 32, integerTok = DecimalIntegerLiteralToken "32"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "first_dimension", identifierTok = IdentifierToken "first_dimension"}, children = [], context = ()}, Node {tag = CallExpr, children = [Node {tag = Identifier {identifierName = "sizeof", identifierTok = IdentifierToken "sizeof"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = Identifier {identifierName = "my_doubles", identifierTok = IdentifierToken "my_doubles"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = DefStmt, children = [Node {tag = Identifier {identifierName = "copy_3_bytes", identifierTok = IdentifierToken "copy_3_bytes"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = ArgumentDefinition, children = [Node {tag = ReadonlyArrayRefTypeSpec, children = [Node {tag = UintTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 8, integerTok = DecimalIntegerLiteralToken "8"}, children = [], context = ()}], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 3, integerTok = DecimalIntegerLiteralToken "3"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "in_array", identifierTok = IdentifierToken "in_array"}, children = [], context = ()}], context = ()}, Node {tag = ArgumentDefinition, children = [Node {tag = MutableArrayRefTypeSpec, children = [Node {tag = UintTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 8, integerTok = DecimalIntegerLiteralToken "8"}, children = [], context = ()}], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 3, integerTok = DecimalIntegerLiteralToken "3"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "out_array", identifierTok = IdentifierToken "out_array"}, children = [], context = ()}], context = ()}], context = ()}, NilNode, Node {tag = Scope, children = [], context = ()}], context = ()}], context = ()},
        Node
          { tag = Statement,
            children =
              [ Node
                  { tag = DefStmt,
                    children =
                      [ Node {tag = Identifier {identifierName = "multi_dimensional_input", identifierTok = IdentifierToken "multi_dimensional_input"}, children = [], context = ()},
                        Node {tag = List, children = [Node {tag = ArgumentDefinition, children = [Node {tag = ReadonlyArrayRefTypeSpec, children = [Node {tag = IntTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 32, integerTok = DecimalIntegerLiteralToken "32"}, children = [], context = ()}], context = ()}, Node {tag = DimExpr, children = [Node {tag = IntegerLiteral {integerVal = 3, integerTok = DecimalIntegerLiteralToken "3"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "my_array", identifierTok = IdentifierToken "my_array"}, children = [], context = ()}], context = ()}], context = ()},
                        NilNode,
                        Node
                          { tag = Scope,
                            children =
                              [ Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = UintTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 32, integerTok = DecimalIntegerLiteralToken "32"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "dimension_0", identifierTok = IdentifierToken "dimension_0"}, children = [], context = ()}, Node {tag = CallExpr, children = [Node {tag = Identifier {identifierName = "sizeof", identifierTok = IdentifierToken "sizeof"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = Identifier {identifierName = "my_array", identifierTok = IdentifierToken "my_array"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = UintTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 32, integerTok = DecimalIntegerLiteralToken "32"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "dimension_1", identifierTok = IdentifierToken "dimension_1"}, children = [], context = ()}, Node {tag = CallExpr, children = [Node {tag = Identifier {identifierName = "sizeof", identifierTok = IdentifierToken "sizeof"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = Identifier {identifierName = "my_array", identifierTok = IdentifierToken "my_array"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = UintTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 32, integerTok = DecimalIntegerLiteralToken "32"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "dimension_2", identifierTok = IdentifierToken "dimension_2"}, children = [], context = ()}, Node {tag = CallExpr, children = [Node {tag = Identifier {identifierName = "sizeof", identifierTok = IdentifierToken "sizeof"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = Identifier {identifierName = "my_array", identifierTok = IdentifierToken "my_array"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 2, integerTok = DecimalIntegerLiteralToken "2"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}
                              ],
                            context = ()
                          }
                      ],
                    context = ()
                  }
              ],
            context = ()
          }
      ],
    context = ()
  }
