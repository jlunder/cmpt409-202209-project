Node {tag = Program {openqasmMajorVersion = 3, openqasmMinorVersion = Nothing, versionTok = EofToken}, children = [Node {tag = Statement, children = [Node {tag = IncludeStmt {includePath = "stdgates.inc", includeTok = StringLiteralToken "\"stdgates.inc\""}, children = [], context = ()}], context = ()},Node {tag = Statement, children = [Node {tag = ConstDeclStmt, children = [Node {tag = IntTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 7040, integerTok = DecimalIntegerLiteralToken "32"}, children = [], context = ()}], context = ()},Node {tag = Identifier {identifierName = "n", identifierTok = IdentifierToken "n"}, children = [], context = ()},Node {tag = IntegerLiteral {integerVal = 7040, integerTok = DecimalIntegerLiteralToken "3"}, children = [], context = ()}], context = ()}], context = ()},Node {tag = Statement, children = [Node {tag = ExternStmt, children = [Node {tag = Identifier {identifierName = "vote", identifierTok = IdentifierToken "vote"}, children = [], context = ()},Node {tag = List, children = [Node {tag = BitTypeSpec, children = [Node {tag = Identifier {identifierName = "n", identifierTok = IdentifierToken "n"}, children = [], context = ()}], context = ()}], context = ()},Node {tag = BitTypeSpec, children = [NilNode], context = ()}], context = ()}], context = ()},Node {tag = Statement, children = [Node {tag = DefStmt, children = [Node {tag = Identifier {identifierName = "logical_meas", identifierTok = IdentifierToken "logical_meas"}, children = [], context = ()},Node {tag = List, children = [Node {tag = ArgumentDefinition, children = [Node {tag = QubitTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 7040, integerTok = DecimalIntegerLiteralToken "3"}, children = [], context = ()}], context = ()},Node {tag = Identifier {identifierName = "d", identifierTok = IdentifierToken "d"}, children = [], context = ()}], context = ()}], context = ()},Node {tag = BitTypeSpec, children = [NilNode], context = ()},Node {tag = Scope, children = [Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = BitTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 7040, integerTok = DecimalIntegerLiteralToken "3"}, children = [], context = ()}], context = ()},Node {tag = Identifier {identifierName = "c", identifierTok = IdentifierToken "c"}, children = [], context = ()},NilNode], context = ()}], context = ()},Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = BitTypeSpec, children = [NilNode], context = ()},Node {tag = Identifier {identifierName = "r", identifierTok = IdentifierToken "r"}, children = [], context = ()},NilNode], context = ()}], context = ()},Node {tag = Statement, children = [Node {tag = MeasureArrowAssignmentStmt, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "d", identifierTok = IdentifierToken "d"}, children = [], context = ()}], context = ()},Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "c", identifierTok = IdentifierToken "c"}, children = [], context = ()}], context = ()}], context = ()}], context = ()},Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = EqualsToken}, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "r", identifierTok = IdentifierToken "r"}, children = [], context = ()}], context = ()},Node {tag = CallExpr, children = [Node {tag = Identifier {identifierName = "vote", identifierTok = IdentifierToken "vote"}, children = [], context = ()},Node {tag = List, children = [Node {tag = Identifier {identifierName = "c", identifierTok = IdentifierToken "c"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},Node {tag = Statement, children = [Node {tag = ReturnStmt, children = [Node {tag = Identifier {identifierName = "r", identifierTok = IdentifierToken "r"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},Node {tag = Statement, children = [Node {tag = QuantumDeclStmt, children = [Node {tag = QubitTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 7040, integerTok = DecimalIntegerLiteralToken "3"}, children = [], context = ()}], context = ()},Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}], context = ()}], context = ()},Node {tag = Statement, children = [Node {tag = QuantumDeclStmt, children = [Node {tag = QubitTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 7040, integerTok = DecimalIntegerLiteralToken "3"}, children = [], context = ()}], context = ()},Node {tag = Identifier {identifierName = "a", identifierTok = IdentifierToken "a"}, children = [], context = ()}], context = ()}], context = ()},Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = BitTypeSpec, children = [NilNode], context = ()},Node {tag = Identifier {identifierName = "r", identifierTok = IdentifierToken "r"}, children = [], context = ()},NilNode], context = ()}], context = ()},Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode,Node {tag = Identifier {identifierName = "rz", identifierTok = IdentifierToken "rz"}, children = [], context = ()},Node {tag = List, children = [Node {tag = BinaryOperatorExpr {binaryOp = SlashToken}, children = [Node {tag = Identifier {identifierName = "pi", identifierTok = IdentifierToken "pi"}, children = [], context = ()},Node {tag = IntegerLiteral {integerVal = 7040, integerTok = DecimalIntegerLiteralToken "4"}, children = [], context = ()}], context = ()}], context = ()},NilNode,Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "a", identifierTok = IdentifierToken "a"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode,Node {tag = Identifier {identifierName = "cx", identifierTok = IdentifierToken "cx"}, children = [], context = ()},NilNode,NilNode,Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}], context = ()},Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "a", identifierTok = IdentifierToken "a"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = EqualsToken}, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "r", identifierTok = IdentifierToken "r"}, children = [], context = ()}], context = ()},Node {tag = CallExpr, children = [Node {tag = Identifier {identifierName = "logical_meas", identifierTok = IdentifierToken "logical_meas"}, children = [], context = ()},Node {tag = List, children = [Node {tag = Identifier {identifierName = "a", identifierTok = IdentifierToken "a"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},Node {tag = Statement, children = [Node {tag = IfStmt, children = [Node {tag = BinaryOperatorExpr {binaryOp = DoubleEqualsToken}, children = [Node {tag = Identifier {identifierName = "r", identifierTok = IdentifierToken "r"}, children = [], context = ()},Node {tag = IntegerLiteral {integerVal = 7040, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()},Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode,Node {tag = Identifier {identifierName = "z", identifierTok = IdentifierToken "z"}, children = [], context = ()},NilNode,NilNode,Node {tag = List, children = [Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},NilNode], context = ()}], context = ()}], context = ()}
