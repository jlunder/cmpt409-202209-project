Node
  { tag = Program {openqasmMajorVersion = 3, openqasmMinorVersion = Nothing, versionTok = EofToken},
    children =
      [ Node {tag = Statement, children = [Node {tag = IncludeStmt {includePath = "stdgates.inc", includeTok = StringLiteralToken "\"stdgates.inc\""}, children = [], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = ConstDeclStmt, children = [Node {tag = IntTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 32, integerTok = DecimalIntegerLiteralToken "32"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "n", identifierTok = IdentifierToken "n"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 10, integerTok = DecimalIntegerLiteralToken "10"}, children = [], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = ConstDeclStmt, children = [Node {tag = FloatTypeSpec, children = [Node {tag = IntegerLiteral {integerVal = 32, integerTok = DecimalIntegerLiteralToken "32"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "theta", identifierTok = IdentifierToken "theta"}, children = [], context = ()}, Node {tag = BinaryOperatorExpr {binaryOp = SlashToken}, children = [Node {tag = ParenExpr, children = [Node {tag = BinaryOperatorExpr {binaryOp = AsteriskToken}, children = [Node {tag = IntegerLiteral {integerVal = 3, integerTok = DecimalIntegerLiteralToken "3"}, children = [], context = ()}, Node {tag = Identifier {identifierName = "pi", identifierTok = IdentifierToken "pi"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = IntegerLiteral {integerVal = 8, integerTok = DecimalIntegerLiteralToken "8"}, children = [], context = ()}], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = QuantumDeclStmt, children = [Node {tag = QubitTypeSpec, children = [NilNode], context = ()}, Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = QuantumDeclStmt, children = [Node {tag = QubitTypeSpec, children = [NilNode], context = ()}, Node {tag = Identifier {identifierName = "r", identifierTok = IdentifierToken "r"}, children = [], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = AngleTypeSpec, children = [Node {tag = Identifier {identifierName = "n", identifierTok = IdentifierToken "n"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "c", identifierTok = IdentifierToken "c"}, children = [], context = ()}, NilNode], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = ResetStmt, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = ResetStmt, children = [Node {tag = Identifier {identifierName = "r", identifierTok = IdentifierToken "r"}, children = [], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "h", identifierTok = IdentifierToken "h"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = Identifier {identifierName = "r", identifierTok = IdentifierToken "r"}, children = [], context = ()}], context = ()}], context = ()}], context = ()},
        Node {tag = Statement, children = [Node {tag = ClassicalDeclStmt, children = [Node {tag = UintTypeSpec, children = [Node {tag = Identifier {identifierName = "n", identifierTok = IdentifierToken "n"}, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "power", identifierTok = IdentifierToken "power"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()},
        Node
          { tag = Statement,
            children =
              [ Node
                  { tag = ForStmt,
                    children =
                      [ Node {tag = UintTypeSpec, children = [NilNode], context = ()},
                        Node {tag = Identifier {identifierName = "i", identifierTok = IdentifierToken "i"}, children = [], context = ()},
                        Node {tag = RangeInitExpr, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}, NilNode, Node {tag = BinaryOperatorExpr {binaryOp = MinusToken}, children = [Node {tag = Identifier {identifierName = "n", identifierTok = IdentifierToken "n"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()},
                        Node
                          { tag = Scope,
                            children =
                              [ Node {tag = Statement, children = [Node {tag = ResetStmt, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "h", identifierTok = IdentifierToken "h"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [Node {tag = List, children = [Node {tag = CtrlGateModifier, children = [NilNode], context = ()}, Node {tag = PowGateModifier, children = [Node {tag = Identifier {identifierName = "power", identifierTok = IdentifierToken "power"}, children = [], context = ()}], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "phase", identifierTok = IdentifierToken "phase"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = Identifier {identifierName = "theta", identifierTok = IdentifierToken "theta"}, children = [], context = ()}], context = ()}, NilNode, Node {tag = List, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}, Node {tag = Identifier {identifierName = "r", identifierTok = IdentifierToken "r"}, children = [], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [Node {tag = List, children = [Node {tag = InvGateModifier, children = [], context = ()}], context = ()}, Node {tag = Identifier {identifierName = "phase", identifierTok = IdentifierToken "phase"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = Identifier {identifierName = "c", identifierTok = IdentifierToken "c"}, children = [], context = ()}], context = ()}, NilNode, Node {tag = List, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = GateCallStmt, children = [NilNode, Node {tag = Identifier {identifierName = "h", identifierTok = IdentifierToken "h"}, children = [], context = ()}, NilNode, NilNode, Node {tag = List, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = MeasureArrowAssignmentStmt, children = [Node {tag = MeasureExpr, children = [Node {tag = Identifier {identifierName = "q", identifierTok = IdentifierToken "q"}, children = [], context = ()}], context = ()}, Node {tag = IndexedIdentifier, children = [Node {tag = Identifier {identifierName = "c", identifierTok = IdentifierToken "c"}, children = [], context = ()}, Node {tag = List, children = [Node {tag = IntegerLiteral {integerVal = 0, integerTok = DecimalIntegerLiteralToken "0"}, children = [], context = ()}], context = ()}], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = DoubleLessEqualsToken}, children = [Node {tag = Identifier {identifierName = "c", identifierTok = IdentifierToken "c"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()},
                                Node {tag = Statement, children = [Node {tag = AssignmentStmt {assignmentOpTok = DoubleLessEqualsToken}, children = [Node {tag = Identifier {identifierName = "power", identifierTok = IdentifierToken "power"}, children = [], context = ()}, Node {tag = IntegerLiteral {integerVal = 1, integerTok = DecimalIntegerLiteralToken "1"}, children = [], context = ()}], context = ()}], context = ()}
                              ],
                            context = ()
                          }
                      ],
                    context = ()
                  }
              ],
            context = ()
          }
      ],
    context = ()
  }
